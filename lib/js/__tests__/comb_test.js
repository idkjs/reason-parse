// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var List = require("bs-platform/lib/js/list.js");
var Comb$ReasonParse = require("../src/comb.js");
var RegExp$ReasonParse = require("../src/regExp.js");

function compareValues(v, w) {
  if (v[0] >= 848054398) {
    if (w[0] >= 848054398) {
      return List.for_all2(compareValues, v[1], w[1]);
    } else {
      return /* false */0;
    }
  } else if (w[0] >= 848054398) {
    return /* false */0;
  } else {
    return +(v[1] === w[1]);
  }
}

function compareResults(x, y) {
  if (x[0] >= 781116926) {
    if (y[0] >= 781116926) {
      return /* true */1;
    } else {
      return /* false */0;
    }
  } else if (y[0] >= 781116926) {
    return /* false */0;
  } else {
    var match = y[1];
    var match$1 = x[1];
    if (compareValues(match$1[0], match[0])) {
      return +(match$1[1] === match[1]);
    } else {
      return /* false */0;
    }
  }
}

var partial_arg = (/^\[/);

function lBrak(param) {
  return RegExp$ReasonParse.regExp(partial_arg, param);
}

var partial_arg$1 = (/^\]/);

function rBrak(param) {
  return RegExp$ReasonParse.regExp(partial_arg$1, param);
}

describe("Comb", (function () {
        Jest.test("atLeast", (function () {
                var result = Comb$ReasonParse.many(/* Some */[4], /* None */0, RegExp$ReasonParse.letter)("abcd123");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "a"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "b"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "c"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "d"
                                                ],
                                                /* [] */0
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "123"
                                    ]
                                  ])));
              }));
        Jest.test("seq", (function () {
                var result = Comb$ReasonParse.seq(/* :: */[
                        RegExp$ReasonParse.letter,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* [] */0
                            ]
                          ]
                        ]
                      ])("a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "a"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "1"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "2"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "3"
                                                ],
                                                /* [] */0
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("keep", (function () {
                var result = Comb$ReasonParse.keep(/* :: */[
                      1,
                      /* :: */[
                        2,
                        /* [] */0
                      ]
                    ], /* :: */[
                      RegExp$ReasonParse.letter,
                      /* :: */[
                        RegExp$ReasonParse.digit,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* [] */0
                          ]
                        ]
                      ]
                    ], "a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "1"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "2"
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("keepFirst", (function () {
                var result = Comb$ReasonParse.keepFirst(/* :: */[
                        RegExp$ReasonParse.letter,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* [] */0
                            ]
                          ]
                        ]
                      ])("a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "a"
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("keepLast", (function () {
                var result = Comb$ReasonParse.keepLast(/* :: */[
                        RegExp$ReasonParse.letter,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* [] */0
                            ]
                          ]
                        ]
                      ])("a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "3"
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("between", (function () {
                var result = Comb$ReasonParse.between(lBrak, RegExp$ReasonParse.digit, rBrak)("[0]a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "0"
                                      ],
                                      "a123**"
                                    ]
                                  ])));
              }));
        Jest.test("nesting: between, keepLast", (function () {
                var result = Comb$ReasonParse.between(lBrak, Comb$ReasonParse.keepLast(/* :: */[
                            RegExp$ReasonParse.letter,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* :: */[
                                RegExp$ReasonParse.digit,
                                /* :: */[
                                  RegExp$ReasonParse.digit,
                                  /* [] */0
                                ]
                              ]
                            ]
                          ]), rBrak)("[a123]**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "3"
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        return Jest.test("sepBy", (function () {
                      var partial_arg = (/^,/);
                      var result = Comb$ReasonParse.sepBy((function (param) {
                              return RegExp$ReasonParse.regExp(partial_arg, param);
                            }), RegExp$ReasonParse.digit, "0,1,1,2,35811");
                      console.log(Comb$ReasonParse.stringOfResult(result));
                      return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                          94326179,
                                          /* tuple */[
                                            /* `List */[
                                              848054398,
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "0"
                                                ],
                                                /* :: */[
                                                  /* `String */[
                                                    -976970511,
                                                    "1"
                                                  ],
                                                  /* :: */[
                                                    /* `String */[
                                                      -976970511,
                                                      "1"
                                                    ],
                                                    /* :: */[
                                                      /* `String */[
                                                        -976970511,
                                                        "2"
                                                      ],
                                                      /* :: */[
                                                        /* `String */[
                                                          -976970511,
                                                          "3"
                                                        ],
                                                        /* [] */0
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ],
                                            "5811"
                                          ]
                                        ])));
                    }));
      }));

exports.compareValues = compareValues;
exports.compareResults = compareResults;
exports.lBrak = lBrak;
exports.rBrak = rBrak;
/* partial_arg Not a pure module */
