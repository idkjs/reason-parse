// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var RegExp$ReasonParse = require("../src/regExp.js");
var CombEager$ReasonParse = require("../src/combEager.js");

function compareValues(v, w) {
  if (v[0] >= 848054398) {
    if (w[0] >= 848054398) {
      return List.for_all2(compareValues, v[1], w[1]);
    } else {
      return /* false */0;
    }
  } else if (w[0] >= 848054398) {
    return /* false */0;
  } else {
    return +(v[1] === w[1]);
  }
}

function compareResults(x, y) {
  if (x[0] >= 781116926) {
    if (y[0] >= 781116926) {
      return /* true */1;
    } else {
      return /* false */0;
    }
  } else if (y[0] >= 781116926) {
    return /* false */0;
  } else {
    var match = y[1];
    var match$1 = x[1];
    if (compareValues(match$1[0], match[0])) {
      return +(match$1[1] === match[1]);
    } else {
      return /* false */0;
    }
  }
}

var partial_arg = (/^,/);

function comma(param) {
  return RegExp$ReasonParse.regExp(partial_arg, param);
}

var partial_arg$1 = (/^\[/);

function lBrak(param) {
  return RegExp$ReasonParse.regExp(partial_arg$1, param);
}

var partial_arg$2 = (/^\]/);

function rBrak(param) {
  return RegExp$ReasonParse.regExp(partial_arg$2, param);
}

function trim(p) {
  return CombEager$ReasonParse.between(RegExp$ReasonParse.maybeWhitespace, p, RegExp$ReasonParse.maybeWhitespace);
}

function trimStart(p) {
  return CombEager$ReasonParse.keepLast(/* :: */[
              RegExp$ReasonParse.maybeWhitespace,
              /* :: */[
                p,
                /* [] */0
              ]
            ]);
}

function trimEnd(p) {
  return CombEager$ReasonParse.keepFirst(/* :: */[
              p,
              /* :: */[
                RegExp$ReasonParse.maybeWhitespace,
                /* [] */0
              ]
            ]);
}

describe("Comb", (function () {
        Jest.test("alt", (function () {
                var result = CombEager$ReasonParse.seq(/* :: */[
                        CombEager$ReasonParse.alt(/* :: */[
                              RegExp$ReasonParse.letters,
                              /* :: */[
                                RegExp$ReasonParse.digit,
                                /* [] */0
                              ]
                            ]),
                        /* :: */[
                          CombEager$ReasonParse.alt(/* :: */[
                                RegExp$ReasonParse.letters,
                                /* :: */[
                                  RegExp$ReasonParse.digit,
                                  /* [] */0
                                ]
                              ]),
                          /* [] */0
                        ]
                      ])("abcd123");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "abcd"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "1"
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ],
                                      "23"
                                    ]
                                  ])));
              }));
        Jest.test("alt", (function () {
                var result = Curry._1(CombEager$ReasonParse.many(/* Some */[1], /* None */0, CombEager$ReasonParse.alt(/* :: */[
                              RegExp$ReasonParse.letters,
                              /* :: */[
                                RegExp$ReasonParse.digit,
                                /* [] */0
                              ]
                            ])), "abcd123*");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "abcd"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "1"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "2"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "3"
                                                ],
                                                /* [] */0
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "*"
                                    ]
                                  ])));
              }));
        Jest.test("atLeast", (function () {
                var result = Curry._1(CombEager$ReasonParse.many(/* Some */[4], /* None */0, RegExp$ReasonParse.letter), "abcd123");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "a"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "b"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "c"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "d"
                                                ],
                                                /* [] */0
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "123"
                                    ]
                                  ])));
              }));
        Jest.test("seq", (function () {
                var result = CombEager$ReasonParse.seq(/* :: */[
                        RegExp$ReasonParse.letter,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* [] */0
                            ]
                          ]
                        ]
                      ])("a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "a"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "1"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "2"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "3"
                                                ],
                                                /* [] */0
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("keep", (function () {
                var result = CombEager$ReasonParse.keep(/* :: */[
                        1,
                        /* :: */[
                          2,
                          /* [] */0
                        ]
                      ], /* :: */[
                        RegExp$ReasonParse.letter,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* [] */0
                            ]
                          ]
                        ]
                      ])("a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "1"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "2"
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("keepFirst", (function () {
                var result = CombEager$ReasonParse.keepFirst(/* :: */[
                        RegExp$ReasonParse.letter,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* [] */0
                            ]
                          ]
                        ]
                      ])("a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "a"
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("keepLast", (function () {
                var result = CombEager$ReasonParse.keepLast(/* :: */[
                        RegExp$ReasonParse.letter,
                        /* :: */[
                          RegExp$ReasonParse.digit,
                          /* :: */[
                            RegExp$ReasonParse.digit,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* [] */0
                            ]
                          ]
                        ]
                      ])("a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "3"
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("between", (function () {
                var result = CombEager$ReasonParse.between(lBrak, RegExp$ReasonParse.digit, rBrak)("[0]a123**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "0"
                                      ],
                                      "a123**"
                                    ]
                                  ])));
              }));
        Jest.test("nesting: between, keepLast", (function () {
                var result = CombEager$ReasonParse.between(lBrak, CombEager$ReasonParse.keepLast(/* :: */[
                            RegExp$ReasonParse.letter,
                            /* :: */[
                              RegExp$ReasonParse.digit,
                              /* :: */[
                                RegExp$ReasonParse.digit,
                                /* :: */[
                                  RegExp$ReasonParse.digit,
                                  /* [] */0
                                ]
                              ]
                            ]
                          ]), rBrak)("[a123]**");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "3"
                                      ],
                                      "**"
                                    ]
                                  ])));
              }));
        Jest.test("sepBy", (function () {
                var partial_arg = (/^,\s*/);
                var result = CombEager$ReasonParse.sepBy((function (param) {
                        return RegExp$ReasonParse.regExp(partial_arg, param);
                      }), RegExp$ReasonParse.digit, "0, 1,  1, 2,35811");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "0"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "1"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "1"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "2"
                                                ],
                                                /* :: */[
                                                  /* `String */[
                                                    -976970511,
                                                    "3"
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "5811"
                                    ]
                                  ])));
              }));
        Jest.test("maybeWhiteSpace", (function () {
                var result = RegExp$ReasonParse.maybeWhitespace("   abc");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "   "
                                      ],
                                      "abc"
                                    ]
                                  ])));
              }));
        Jest.test("trim", (function () {
                var result = CombEager$ReasonParse.between(RegExp$ReasonParse.maybeWhitespace, RegExp$ReasonParse.digits, RegExp$ReasonParse.maybeWhitespace)("   0123     ");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `String */[
                                        -976970511,
                                        "0123"
                                      ],
                                      ""
                                    ]
                                  ])));
              }));
        Jest.test("sepBy, trimEnd", (function () {
                var partial_arg = (/^,/);
                var result = CombEager$ReasonParse.sepBy(trimEnd((function (param) {
                            return RegExp$ReasonParse.regExp(partial_arg, param);
                          })), RegExp$ReasonParse.digit, "0, 1,  1, 2,35811");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "0"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "1"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "1"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "2"
                                                ],
                                                /* :: */[
                                                  /* `String */[
                                                    -976970511,
                                                    "3"
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "5811"
                                    ]
                                  ])));
              }));
        Jest.test("sepBy, trimStart", (function () {
                var partial_arg = (/^,/);
                var result = CombEager$ReasonParse.sepBy(trimStart((function (param) {
                            return RegExp$ReasonParse.regExp(partial_arg, param);
                          })), RegExp$ReasonParse.digit, "0 ,1  ,1   ,2    ,35811");
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                    94326179,
                                    /* tuple */[
                                      /* `List */[
                                        848054398,
                                        /* :: */[
                                          /* `String */[
                                            -976970511,
                                            "0"
                                          ],
                                          /* :: */[
                                            /* `String */[
                                              -976970511,
                                              "1"
                                            ],
                                            /* :: */[
                                              /* `String */[
                                                -976970511,
                                                "1"
                                              ],
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "2"
                                                ],
                                                /* :: */[
                                                  /* `String */[
                                                    -976970511,
                                                    "3"
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      "5811"
                                    ]
                                  ])));
              }));
        return Jest.test("betweenm, sepBy, trim", (function () {
                      var partial_arg = CombEager$ReasonParse.between(RegExp$ReasonParse.maybeWhitespace, comma, RegExp$ReasonParse.maybeWhitespace);
                      var result = CombEager$ReasonParse.between(CombEager$ReasonParse.between(RegExp$ReasonParse.maybeWhitespace, lBrak, RegExp$ReasonParse.maybeWhitespace), (function (param) {
                                return CombEager$ReasonParse.sepBy(partial_arg, RegExp$ReasonParse.digits, param);
                              }), CombEager$ReasonParse.between(RegExp$ReasonParse.maybeWhitespace, rBrak, RegExp$ReasonParse.maybeWhitespace))(" [  01 ,   12   ,  12    ,  23    , 34]   5811");
                      return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](compareResults(result, /* `Success */[
                                          94326179,
                                          /* tuple */[
                                            /* `List */[
                                              848054398,
                                              /* :: */[
                                                /* `String */[
                                                  -976970511,
                                                  "01"
                                                ],
                                                /* :: */[
                                                  /* `String */[
                                                    -976970511,
                                                    "12"
                                                  ],
                                                  /* :: */[
                                                    /* `String */[
                                                      -976970511,
                                                      "12"
                                                    ],
                                                    /* :: */[
                                                      /* `String */[
                                                        -976970511,
                                                        "23"
                                                      ],
                                                      /* :: */[
                                                        /* `String */[
                                                          -976970511,
                                                          "34"
                                                        ],
                                                        /* [] */0
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ],
                                            "5811"
                                          ]
                                        ])));
                    }));
      }));

exports.compareValues = compareValues;
exports.compareResults = compareResults;
exports.comma = comma;
exports.lBrak = lBrak;
exports.rBrak = rBrak;
exports.trim = trim;
exports.trimStart = trimStart;
exports.trimEnd = trimEnd;
/* partial_arg Not a pure module */
