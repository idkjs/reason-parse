// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Char = require("bs-platform/lib/js/char.js");
var Block = require("bs-platform/lib/js/block.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var Combinators$ReasonParse = require("./combinators.js");

function f(result) {
  if (typeof result === "number") {
    throw [
          Caml_builtin_exceptions.assert_failure,
          [
            "tests.re",
            6,
            9
          ]
        ];
  } else if (result.tag) {
    throw [
          Caml_builtin_exceptions.assert_failure,
          [
            "tests.re",
            6,
            9
          ]
        ];
  } else {
    return /* Chr */Block.__(0, [Char.uppercase(result[0])]);
  }
}

var partial_arg = Combinators$ReasonParse.charInRange(97, 122);

function h(param) {
  return Combinators$ReasonParse.map(f, partial_arg, param);
}

var g = Combinators$ReasonParse.$less$pipe$great(Combinators$ReasonParse.$less$pipe$great(Combinators$ReasonParse.character(/* "a" */97), Combinators$ReasonParse.character(/* "b" */98)), Combinators$ReasonParse.character(/* "c" */99));

console.log(Combinators$ReasonParse.stringOfOutput(Combinators$ReasonParse.times(/* None */0, /* Some */[5], 10, Combinators$ReasonParse.character(/* "a" */97), "aaaabb")));

exports.f = f;
exports.h = h;
exports.g = g;
/* partial_arg Not a pure module */
