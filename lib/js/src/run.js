// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Stream = require("bs-platform/lib/js/stream.js");
var Node$ReasonParse = require("./node.js");
var Regex$ReasonParse = require("./regex.js");
var Pstream$ReasonParse = require("./pstream.js");

var partial_arg = Stream.of_list(/* :: */[
      Regex$ReasonParse.letters,
      /* :: */[
        Regex$ReasonParse.digits,
        /* :: */[
          Regex$ReasonParse.letters,
          /* :: */[
            Regex$ReasonParse.digits,
            /* [] */0
          ]
        ]
      ]
    ]);

function t(param) {
  return Pstream$ReasonParse.tillFailure(partial_arg, param);
}

var match = t("abc123pqr789");

var results = match[0];

function print_results(results) {
  return List.iter((function (param) {
                console.log(Node$ReasonParse.stringOfValue(param[0]));
                console.log(Node$ReasonParse.stringOfParseData(param[1]));
                return /* () */0;
              }), results);
}

print_results(results);

console.log(Node$ReasonParse.stringOfParseData(Pstream$ReasonParse.mergeParseData(/* None */0, "abc123pqr789", List.split(results)[1])));

console.log(Node$ReasonParse.stringOfResult(Pstream$ReasonParse.seq(/* :: */[
              Regex$ReasonParse.letters,
              /* :: */[
                Regex$ReasonParse.digits,
                /* :: */[
                  Regex$ReasonParse.letters,
                  /* :: */[
                    Regex$ReasonParse.digits,
                    /* [] */0
                  ]
                ]
              ]
            ], "abc123pqr789xyz")));

var atoj = Pstream$ReasonParse.times(/* Some */[3], /* Some */[4], Regex$ReasonParse.letter, "ab5cdefghijklmnopqrstuvwxyz12345");

console.log(Node$ReasonParse.stringOfResult(atoj));

var tillFailure = Pstream$ReasonParse.tillFailure;

var p = Regex$ReasonParse.letters;

var q = Regex$ReasonParse.digits;

var r = Regex$ReasonParse.quotedString;

var s = "abc123\\\"abc123\\\"";

exports.tillFailure = tillFailure;
exports.p = p;
exports.q = q;
exports.r = r;
exports.s = s;
exports.t = t;
exports.results = results;
exports.print_results = print_results;
exports.atoj = atoj;
/* partial_arg Not a pure module */
