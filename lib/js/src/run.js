// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Format = require("bs-platform/lib/js/format.js");
var Node$ReasonParse = require("./node.js");
var Combs$ReasonParse = require("./combs.js");
var Regex$ReasonParse = require("./regex.js");

var partial_arg = /* Some */[Regex$ReasonParse.intMapper];

function q(param) {
  return Combs$ReasonParse.map(partial_arg, /* None */0, Regex$ReasonParse.digits, param);
}

var partial_arg_001 = /* :: */[
  Regex$ReasonParse.letters,
  /* :: */[
    q,
    /* :: */[
      Regex$ReasonParse.letters,
      /* [] */0
    ]
  ]
];

var partial_arg$1 = /* :: */[
  q,
  partial_arg_001
];

function qpqp(param) {
  return Combs$ReasonParse.seq(partial_arg$1, param);
}

var res = qpqp("456ABCdef123abc***");

var s;

s = res.tag ? res[0] : Curry._2(Format.sprintf(/* Format */[
            /* String_literal */Block.__(11, [
                "Value: ",
                /* String */Block.__(2, [
                    /* No_padding */0,
                    /* String_literal */Block.__(11, [
                        ", ",
                        /* String */Block.__(2, [
                            /* No_padding */0,
                            /* End_of_format */0
                          ])
                      ])
                  ])
              ]),
            "Value: %s, %s"
          ]), Node$ReasonParse.stringOfValue(res[0]), Node$ReasonParse.stringOfParseData(res[1]));

console.log(s);

var p = Regex$ReasonParse.letters;

exports.p = p;
exports.q = q;
exports.qpqp = qpqp;
exports.res = res;
exports.s = s;
/* res Not a pure module */
